//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebStore.ProductServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service.DataTransferObjects")]
    [System.SerializableAttribute()]
    public partial class ProductDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DiscontinuedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubCategoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Discontinued {
            get {
                return this.DiscontinuedField;
            }
            set {
                if ((this.DiscontinuedField.Equals(value) != true)) {
                    this.DiscontinuedField = value;
                    this.RaisePropertyChanged("Discontinued");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailerID {
            get {
                return this.RetailerIDField;
            }
            set {
                if ((this.RetailerIDField.Equals(value) != true)) {
                    this.RetailerIDField = value;
                    this.RaisePropertyChanged("RetailerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubCategoryID {
            get {
                return this.SubCategoryIDField;
            }
            set {
                if ((this.SubCategoryIDField.Equals(value) != true)) {
                    this.SubCategoryIDField = value;
                    this.RaisePropertyChanged("SubCategoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubCategoryDTO", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service.DataTransferObjects")]
    [System.SerializableAttribute()]
    public partial class SubCategoryDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentCategoryID {
            get {
                return this.ParentCategoryIDField;
            }
            set {
                if ((this.ParentCategoryIDField.Equals(value) != true)) {
                    this.ParentCategoryIDField = value;
                    this.RaisePropertyChanged("ParentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCategoryName {
            get {
                return this.ParentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCategoryNameField, value) != true)) {
                    this.ParentCategoryNameField = value;
                    this.RaisePropertyChanged("ParentCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubCategoryID {
            get {
                return this.SubCategoryIDField;
            }
            set {
                if ((this.SubCategoryIDField.Equals(value) != true)) {
                    this.SubCategoryIDField = value;
                    this.RaisePropertyChanged("SubCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubCategoryName {
            get {
                return this.SubCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCategoryNameField, value) != true)) {
                    this.SubCategoryNameField = value;
                    this.RaisePropertyChanged("SubCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProducts", ReplyAction="http://tempuri.org/IProductService/GetProductsResponse")]
        WebStore.ProductServiceReference.ProductDTO[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProducts", ReplyAction="http://tempuri.org/IProductService/GetProductsResponse")]
        System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByCat", ReplyAction="http://tempuri.org/IProductService/GetProductsByCatResponse")]
        WebStore.ProductServiceReference.ProductDTO[] GetProductsByCat(int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByCat", ReplyAction="http://tempuri.org/IProductService/GetProductsByCatResponse")]
        System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO[]> GetProductsByCatAsync(int CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsBySubCat", ReplyAction="http://tempuri.org/IProductService/GetProductsBySubCatResponse")]
        WebStore.ProductServiceReference.ProductDTO[] GetProductsBySubCat(int SubCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsBySubCat", ReplyAction="http://tempuri.org/IProductService/GetProductsBySubCatResponse")]
        System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO[]> GetProductsBySubCatAsync(int SubCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductByID", ReplyAction="http://tempuri.org/IProductService/GetProductByIDResponse")]
        WebStore.ProductServiceReference.ProductDTO GetProductByID(int ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductByID", ReplyAction="http://tempuri.org/IProductService/GetProductByIDResponse")]
        System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO> GetProductByIDAsync(int ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        void AddProduct(WebStore.ProductServiceReference.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/AddProduct", ReplyAction="http://tempuri.org/IProductService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(WebStore.ProductServiceReference.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/EditProduct", ReplyAction="http://tempuri.org/IProductService/EditProductResponse")]
        void EditProduct(WebStore.ProductServiceReference.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/EditProduct", ReplyAction="http://tempuri.org/IProductService/EditProductResponse")]
        System.Threading.Tasks.Task EditProductAsync(WebStore.ProductServiceReference.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        void DeleteProduct(WebStore.ProductServiceReference.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(WebStore.ProductServiceReference.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSubCategoryByID", ReplyAction="http://tempuri.org/IProductService/GetSubCategoryByIDResponse")]
        WebStore.ProductServiceReference.SubCategoryDTO GetSubCategoryByID(int SubCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSubCategoryByID", ReplyAction="http://tempuri.org/IProductService/GetSubCategoryByIDResponse")]
        System.Threading.Tasks.Task<WebStore.ProductServiceReference.SubCategoryDTO> GetSubCategoryByIDAsync(int SubCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSubCategory", ReplyAction="http://tempuri.org/IProductService/GetSubCategoryResponse")]
        WebStore.ProductServiceReference.SubCategoryDTO[] GetSubCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSubCategory", ReplyAction="http://tempuri.org/IProductService/GetSubCategoryResponse")]
        System.Threading.Tasks.Task<WebStore.ProductServiceReference.SubCategoryDTO[]> GetSubCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByTopSales", ReplyAction="http://tempuri.org/IProductService/GetProductsByTopSalesResponse")]
        WebStore.ProductServiceReference.ProductDTO[] GetProductsByTopSales(int countReturned);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsByTopSales", ReplyAction="http://tempuri.org/IProductService/GetProductsByTopSalesResponse")]
        System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO[]> GetProductsByTopSalesAsync(int countReturned);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : WebStore.ProductServiceReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<WebStore.ProductServiceReference.IProductService>, WebStore.ProductServiceReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebStore.ProductServiceReference.ProductDTO[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public WebStore.ProductServiceReference.ProductDTO[] GetProductsByCat(int CategoryId) {
            return base.Channel.GetProductsByCat(CategoryId);
        }
        
        public System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO[]> GetProductsByCatAsync(int CategoryId) {
            return base.Channel.GetProductsByCatAsync(CategoryId);
        }
        
        public WebStore.ProductServiceReference.ProductDTO[] GetProductsBySubCat(int SubCategoryId) {
            return base.Channel.GetProductsBySubCat(SubCategoryId);
        }
        
        public System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO[]> GetProductsBySubCatAsync(int SubCategoryId) {
            return base.Channel.GetProductsBySubCatAsync(SubCategoryId);
        }
        
        public WebStore.ProductServiceReference.ProductDTO GetProductByID(int ProductId) {
            return base.Channel.GetProductByID(ProductId);
        }
        
        public System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO> GetProductByIDAsync(int ProductId) {
            return base.Channel.GetProductByIDAsync(ProductId);
        }
        
        public void AddProduct(WebStore.ProductServiceReference.ProductDTO product) {
            base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(WebStore.ProductServiceReference.ProductDTO product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public void EditProduct(WebStore.ProductServiceReference.ProductDTO product) {
            base.Channel.EditProduct(product);
        }
        
        public System.Threading.Tasks.Task EditProductAsync(WebStore.ProductServiceReference.ProductDTO product) {
            return base.Channel.EditProductAsync(product);
        }
        
        public void DeleteProduct(WebStore.ProductServiceReference.ProductDTO product) {
            base.Channel.DeleteProduct(product);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(WebStore.ProductServiceReference.ProductDTO product) {
            return base.Channel.DeleteProductAsync(product);
        }
        
        public WebStore.ProductServiceReference.SubCategoryDTO GetSubCategoryByID(int SubCategoryId) {
            return base.Channel.GetSubCategoryByID(SubCategoryId);
        }
        
        public System.Threading.Tasks.Task<WebStore.ProductServiceReference.SubCategoryDTO> GetSubCategoryByIDAsync(int SubCategoryId) {
            return base.Channel.GetSubCategoryByIDAsync(SubCategoryId);
        }
        
        public WebStore.ProductServiceReference.SubCategoryDTO[] GetSubCategory() {
            return base.Channel.GetSubCategory();
        }
        
        public System.Threading.Tasks.Task<WebStore.ProductServiceReference.SubCategoryDTO[]> GetSubCategoryAsync() {
            return base.Channel.GetSubCategoryAsync();
        }
        
        public WebStore.ProductServiceReference.ProductDTO[] GetProductsByTopSales(int countReturned) {
            return base.Channel.GetProductsByTopSales(countReturned);
        }
        
        public System.Threading.Tasks.Task<WebStore.ProductServiceReference.ProductDTO[]> GetProductsByTopSalesAsync(int countReturned) {
            return base.Channel.GetProductsByTopSalesAsync(countReturned);
        }
    }
}
